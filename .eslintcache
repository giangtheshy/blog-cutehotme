[{"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\index.js":"1","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\App.jsx":"2","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Header\\Header.jsx":"3","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Posts\\Posts.jsx":"4","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Form\\Form.jsx":"5","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Posts\\Post\\Post.jsx":"6","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\reducers\\index.js":"7","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\constants\\actionTypes.js":"8","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\api\\index.js":"9","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\api\\axios.js":"10","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\actions\\post.action.js":"11","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\reducers\\user.reducer.js":"12","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\reducers\\post.reducer.js":"13","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\pages\\Home.jsx":"14","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\pages\\Login.jsx":"15","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\pages\\Register.jsx":"16","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\pages\\Error.jsx":"17","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Form\\Login\\LoginForm.jsx":"18","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\actions\\user.action.js":"19","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Form\\Register\\RegisterForm.jsx":"20","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\layout\\alert\\Notify.jsx":"21","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Chat.jsx":"22","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\ToolsBar\\ToolsBar.jsx":"23","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\ChatBox\\ChatBox.jsx":"24","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\SideBar\\SideBarChat.jsx":"25","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\ChatBox\\Footer\\Footer.jsx":"26","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\SideBar\\Room\\Room.jsx":"27","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\reducers\\chat.reducer.js":"28","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\actions\\chat.action.js":"29","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\ChatBox\\Messages\\Messages.jsx":"30","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\ChatBox\\Messages\\Message.jsx":"31","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\utils\\elements\\Button\\Button.jsx":"32","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\layout\\SinglePost\\SinglePost.jsx":"33","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\pages\\PostPage.jsx":"34","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\layout\\Comments\\Comments.jsx":"35","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\utils\\functions\\moment.js":"36"},{"size":558,"mtime":1610720633697,"results":"37","hashOfConfig":"38"},{"size":1627,"mtime":1613826184688,"results":"39","hashOfConfig":"38"},{"size":1750,"mtime":1612623710859,"results":"40","hashOfConfig":"38"},{"size":466,"mtime":1610632808384,"results":"41","hashOfConfig":"38"},{"size":3935,"mtime":1610772531667,"results":"42","hashOfConfig":"38"},{"size":3219,"mtime":1613881839352,"results":"43","hashOfConfig":"38"},{"size":222,"mtime":1611302903627,"results":"44","hashOfConfig":"38"},{"size":829,"mtime":1613829980066,"results":"45","hashOfConfig":"38"},{"size":1157,"mtime":1613826016795,"results":"46","hashOfConfig":"38"},{"size":114,"mtime":1614955199431,"results":"47","hashOfConfig":"38"},{"size":2481,"mtime":1613829980072,"results":"48","hashOfConfig":"38"},{"size":488,"mtime":1614955784467,"results":"49","hashOfConfig":"38"},{"size":2284,"mtime":1613881292066,"results":"50","hashOfConfig":"38"},{"size":863,"mtime":1613815164403,"results":"51","hashOfConfig":"38"},{"size":202,"mtime":1610713156482,"results":"52","hashOfConfig":"38"},{"size":220,"mtime":1610719285638,"results":"53","hashOfConfig":"38"},{"size":204,"mtime":1610711194841,"results":"54","hashOfConfig":"38"},{"size":3307,"mtime":1612623629735,"results":"55","hashOfConfig":"38"},{"size":1662,"mtime":1612623629735,"results":"56","hashOfConfig":"38"},{"size":2951,"mtime":1610724707869,"results":"57","hashOfConfig":"38"},{"size":222,"mtime":1610771539325,"results":"58","hashOfConfig":"38"},{"size":809,"mtime":1611305064171,"results":"59","hashOfConfig":"38"},{"size":352,"mtime":1611325781664,"results":"60","hashOfConfig":"38"},{"size":884,"mtime":1611314991671,"results":"61","hashOfConfig":"38"},{"size":1217,"mtime":1611303785673,"results":"62","hashOfConfig":"38"},{"size":934,"mtime":1611313993464,"results":"63","hashOfConfig":"38"},{"size":1433,"mtime":1611325854414,"results":"64","hashOfConfig":"38"},{"size":556,"mtime":1611307387594,"results":"65","hashOfConfig":"38"},{"size":789,"mtime":1611309517200,"results":"66","hashOfConfig":"38"},{"size":448,"mtime":1611321408027,"results":"67","hashOfConfig":"38"},{"size":1486,"mtime":1611332252155,"results":"68","hashOfConfig":"38"},{"size":433,"mtime":1613814243939,"results":"69","hashOfConfig":"38"},{"size":168,"mtime":1613826017189,"results":"70","hashOfConfig":"38"},{"size":1033,"mtime":1613881292068,"results":"71","hashOfConfig":"38"},{"size":2116,"mtime":1613881639821,"results":"72","hashOfConfig":"38"},{"size":603,"mtime":1613833445215,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"uwifsd",{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"76"},"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\index.js",[],["161","162"],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\App.jsx",["163","164"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport Header from \"./components/Header/Header\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Login from \"./components/pages/Login\";\r\nimport Register from \"./components/pages/Register\";\r\nimport Error from \"./components/pages/Error\";\r\nimport PostPage from \"./components/pages/PostPage\";\r\n\r\nimport { fetchPost } from \"./actions/post.action\";\r\nimport { checkLogin } from \"./actions/user.action\";\r\nimport { setSocket } from \"./actions/chat.action\";\r\n\r\nconst ENDPOINT = \"https://blog-cutehotme.herokuapp.com/\";\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const [cookies] = useCookies([\"user\"]);\r\n  useEffect(() => {\r\n    const socket = io(ENDPOINT, { transports: [\"websocket\", \"polling\", \"flashsocket\"] });\r\n    dispatch(setSocket(socket));\r\n    if (cookies.user !== \"\") {\r\n      dispatch(checkLogin(cookies.user));\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch(fetchPost());\r\n  }, [dispatch]);\r\n  return (\r\n    <main className=\"app\">\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/post/:id\" component={PostPage} />\r\n          <Route path=\"*\" component={Error} />\r\n        </Switch>\r\n      </Router>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Header\\Header.jsx",["165"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { logoutUser } from \"../../actions/user.action\";\r\nimport memories from \"../../images/memories.png\";\r\nimport \"./Header.scss\";\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  const [_, setCookies] = useCookies([\"user\"]);\r\n  const user = useSelector((state) => state.users);\r\n  const dispatch = useDispatch();\r\n\r\n  const login = () => {\r\n    history.push(\"/login\");\r\n  };\r\n  const register = () => history.push(\"/register\");\r\n  const logout = async () => {\r\n    await setCookies(\"user\", \"\", { path: \"/\" });\r\n    dispatch(logoutUser());\r\n    history.push(\"/login\");\r\n  };\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__left\" onClick={() => history.push(\"/\")}>\r\n        <h1>Cutehotme</h1>\r\n        <img src={memories} alt=\"logo-memories\" />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        {user.token ? (\r\n          <>\r\n            <div className=\"user-status\">\r\n              <img src={user.user.photoURL} alt=\"avatar\" className=\"avatar\" />\r\n              <h5 className=\"display-name\">{user.user.displayName}</h5>\r\n            </div>\r\n            <button className=\"login\" onClick={logout}>\r\n              Logout\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {\" \"}\r\n            <button className=\"login\" onClick={login}>\r\n              Login\r\n            </button>\r\n            <button className=\"sign-up\" onClick={register}>\r\n              Sign up\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default React.memo(Header);\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Posts\\Posts.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Form\\Form.jsx",["166"],"import React, { useState, useEffect } from \"react\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./Form.scss\";\r\nimport { createPost, updatePost, getCurrentId } from \"../../actions/post.action\";\r\nimport Notify from \"../layout/alert/Notify\";\r\n\r\nconst Form = () => {\r\n  const [postData, setPostData] = useState({ title: \"\", message: \"\", selectedFile: null, tags: [] });\r\n  const [notify, setNotify] = useState({ content: \"\", type: \"\" });\r\n  const [showNotify, setShowNotify] = useState(false);\r\n\r\n  const currentId = useSelector((state) => state.posts.currentId);\r\n  const posts = useSelector((state) => state.posts.posts);\r\n  const user = useSelector((state) => state.users.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (currentId) {\r\n      const { title, message, selectedFile, tags } = posts.find((post) => post._id === currentId);\r\n      setPostData({ title, message, selectedFile, tags });\r\n    }\r\n  }, [currentId]);\r\n  useEffect(() => {\r\n    const alert = setTimeout(() => {\r\n      setShowNotify(false);\r\n    }, 2000);\r\n    return () => clearTimeout(alert);\r\n  }, [showNotify]);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (user._id) {\r\n      if (\r\n        postData.title !== \"\" &&\r\n        postData.message !== \"\" &&\r\n        postData.selectedFile !== \"\" &&\r\n        postData.tags.length !== 0\r\n      ) {\r\n        const newPostData = { ...postData, creator: user.displayName, photoURL: user.photoURL, userID: user._id };\r\n        if (currentId) {\r\n          dispatch(updatePost(currentId, newPostData));\r\n          dispatch(getCurrentId(null));\r\n          setShowNotify(true);\r\n          setNotify({ content: \"Modify success\", type: \"success\" });\r\n        } else {\r\n          dispatch(createPost(newPostData));\r\n          setShowNotify(true);\r\n          setNotify({ content: \"Post success\", type: \"success\" });\r\n        }\r\n      } else {\r\n        setShowNotify(true);\r\n        setNotify({ content: \"Some fields not fill in\", type: \"danger\" });\r\n      }\r\n    } else {\r\n      setShowNotify(true);\r\n      setNotify({ content: \"Must login to post\", type: \"danger\" });\r\n    }\r\n    setPostData({ title: \"\", message: \"\", selectedFile: null, tags: [] });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h4 className=\"form__title\">{currentId ? \"Editing\" : \"Creating\"} Post</h4>\r\n      {showNotify && <Notify content={notify.content} type={notify.type} />}\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"title\" className={`title ${postData.title === \"\" ? null : \"focus\"}`}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={postData.title}\r\n            onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"message\" className={`message ${postData.message === \"\" ? null : \"focus\"}`}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"message\"\r\n            value={postData.message}\r\n            onChange={(e) => setPostData({ ...postData, message: e.target.value })}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"tags\" className={`tags ${postData.tags.length === 0 ? null : \"focus\"}`}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"tags\"\r\n            value={postData.tags}\r\n            onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(\",\") })}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"selectedFile\" className=\"selectedFile\">\r\n          <FileBase\r\n            type=\"file\"\r\n            id=\"selectedFile\"\r\n            onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\r\n            multiple={false}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"submit-btn\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Form);\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Posts\\Post\\Post.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\reducers\\index.js",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\constants\\actionTypes.js",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\api\\index.js",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\api\\axios.js",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\actions\\post.action.js",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\reducers\\user.reducer.js",["167"],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\reducers\\post.reducer.js",["168"],"import {\r\n  CREATE,\r\n  FETCH_ALL,\r\n  DELETE,\r\n  LIKE,\r\n  UPDATE,\r\n  GET_CURRENT_ID,\r\n  GET_COMMENTS,\r\n  CREATE_COMMENT,\r\n  GET_POST,\r\n  LIKE_SINGLE,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (postState = { posts: [], currentId: null, comments: [], post: {} }, action) => {\r\n  switch (action.type) {\r\n    case CREATE:\r\n      return { ...postState, posts: [...postState.posts, action.payload] };\r\n    case FETCH_ALL:\r\n      return { ...postState, posts: action.payload };\r\n    case DELETE:\r\n      return { ...postState, posts: postState.posts.filter((post) => post._id !== action.payload) };\r\n    case UPDATE:\r\n      return {\r\n        ...postState,\r\n        posts: postState.posts.map((post) => (post._id === action.payload._id ? action.payload : post)),\r\n      };\r\n    case LIKE:\r\n      return {\r\n        ...postState,\r\n        posts: postState.posts.map((post) =>\r\n          post._id === action.payload.id\r\n            ? post.likeCount.find((like) => like === action.payload.uid)\r\n              ? { ...post, likeCount: post.likeCount.filter((like) => like !== action.payload.uid) }\r\n              : { ...post, likeCount: [...post.likeCount, action.payload.uid] }\r\n            : post\r\n        ),\r\n      };\r\n    case LIKE_SINGLE:\r\n      return {\r\n        ...postState,\r\n        post: postState.post.likeCount.find((like) => like === action.payload.uid)\r\n          ? { ...postState.post, likeCount: postState.post.likeCount.filter((like) => like !== action.payload.uid) }\r\n          : { ...postState.post, likeCount: [...postState.post.likeCount, action.payload.uid] },\r\n      };\r\n    case GET_CURRENT_ID:\r\n      return { ...postState, currentId: action.payload };\r\n    case CREATE_COMMENT:\r\n      return {\r\n        ...postState,\r\n        comments: [...postState.comments, action.payload],\r\n        post: { ...postState.post, comments: [...postState.post.comments, action.payload._id] },\r\n        posts: postState.posts.map((post) =>\r\n          post._id === action.payload.pid ? { ...post, comments: [...post.comments, action.payload._id] } : post\r\n        ),\r\n      };\r\n    case GET_COMMENTS:\r\n      return { ...postState, comments: action.payload };\r\n    case GET_POST:\r\n      return { ...postState, post: action.payload };\r\n    default:\r\n      return postState;\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\pages\\Home.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\pages\\Login.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\pages\\Register.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\pages\\Error.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Form\\Login\\LoginForm.jsx",["169"],"import React, { useState, useEffect } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\n\r\nimport { loginUser, loginGoogle } from \"../../../actions/user.action\";\r\nimport \"./LoginForm.scss\";\r\nimport Notify from \"../../layout/alert/Notify\";\r\n\r\nconst LoginForm = () => {\r\n  const [cookies, setCookies] = useCookies([\"user\"]);\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [notify, setNotify] = useState({ content: \"\", type: \"\" });\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const alert = setTimeout(() => {\r\n      setNotify({ content: \"\", type: \"\" });\r\n    }, 4000);\r\n    return () => clearTimeout(alert);\r\n  }, [notify]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (userData.email !== \"\" && userData.password !== \"\") {\r\n      try {\r\n        const message = await dispatch(loginUser(userData, setCookies));\r\n        if (!message) {\r\n          history.push(\"/\");\r\n        } else {\r\n          setNotify({ content: message, type: \"danger\" });\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      setNotify({ content: \"must fill in full fields\", type: \"danger\" });\r\n    }\r\n    setUserData({ email: \"\", password: \"\" });\r\n  };\r\n  const handleSuccess = async (res) => {\r\n    const { name, imageUrl, email, googleId } = res.profileObj;\r\n    const token = res.tokenId;\r\n    dispatch(loginGoogle({ name, imageUrl, googleId, email, token }, setCookies));\r\n    history.push(\"/\");\r\n  };\r\n  const handleFailure = () => {\r\n    alert(\"Some errors were occur when login\");\r\n  };\r\n  return (\r\n    <div className=\"form\">\r\n      <h4 className=\"form__title\">Login</h4>\r\n      {notify.content && <Notify content={notify.content} type={notify.type} />}\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"email\" className={`email ${userData.email === \"\" ? null : \"focus\"}`}>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={userData.email}\r\n            onChange={(e) => setUserData({ ...userData, email: e.target.value })}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\" className={`password ${userData.password === \"\" ? null : \"focus\"}`}>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={userData.password}\r\n            onChange={(e) => setUserData({ ...userData, password: e.target.value })}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"submit-btn\">\r\n          Submit\r\n        </button>\r\n        <GoogleLogin\r\n          clientId=\"467571315756-vigfi3qh89vvgbeqhduotlr2jso13gl5.apps.googleusercontent.com\"\r\n          onSuccess={handleSuccess}\r\n          onFailure={handleFailure}\r\n          cookiePolicy=\"single_host_origin\"\r\n          render={(props) => (\r\n            <button className=\"gg-login-btn\" onClick={props.onClick} disabled={props.disabled}>\r\n              <FcGoogle /> Login with Google\r\n            </button>\r\n          )}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\actions\\user.action.js",["170","171"],"import { LOGIN, REGISTER, DELETE_USER, GET_USER, LOGOUT, CHECK_LOGIN, LOGIN_GOOGLE } from \"../constants/actionTypes\";\r\nimport * as api from \"../api\";\r\n\r\nexport const registerUser = (user, setCookies) => async (dispatch) => {\r\n  try {\r\n    await api.registerUser(user);\r\n    const { data } = await api.loginUser({ email: user.email, password: user.password });\r\n    await setCookies(\"user\", data.token, { path: \"/\" });\r\n    dispatch({ type: REGISTER, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const loginUser = (user, setCookies) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.loginUser({ email: user.email, password: user.password });\r\n    await setCookies(\"user\", data.token, { path: \"/\" });\r\n    dispatch({ type: LOGIN, payload: data });\r\n  } catch (error) {\r\n    return error.response.data.message;\r\n  }\r\n};\r\nexport const logoutUser = () => (dispatch) => {\r\n  try {\r\n    dispatch({ type: LOGOUT });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const checkLogin = (token) => async (dispatch) => {\r\n  try {\r\n    if (token) {\r\n      const check = await api.checkLogin(token);\r\n      if (check.data) {\r\n        const { data } = await api.getUser(token);\r\n        dispatch({ type: CHECK_LOGIN, payload: { data, token } });\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const loginGoogle = (user) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.loginGoogle(user);\r\n    dispatch({ type: LOGIN_GOOGLE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\Form\\Register\\RegisterForm.jsx",["172"],"import React, { useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../../../actions/user.action\";\r\nimport \"./RegisterForm.scss\";\r\n\r\nconst LoginForm = () => {\r\n  const [_, setCookies] = useCookies([\"user\"]);\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    displayName: \"\",\r\n    password: \"\",\r\n    photoURL: null,\r\n    passwordCheck: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      userData.displayName !== \"\" &&\r\n      userData.email !== \"\" &&\r\n      userData.password !== \"\" &&\r\n      userData.photoURL !== \"\" &&\r\n      userData.passwordCheck !== \"\"\r\n    ) {\r\n      dispatch(registerUser(userData, setCookies));\r\n    } else {\r\n      alert(\"Please Fill in full fields\");\r\n    }\r\n    setUserData({ email: \"\", displayName: \"\", password: \"\", photoURL: null, passwordCheck: \"\" });\r\n  };\r\n  return (\r\n    <div className=\"form\">\r\n      <h4 className=\"form__title\">Register</h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"display-name\" className={`display-name ${userData.displayName === \"\" ? null : \"focus\"}`}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"display-name\"\r\n            value={userData.displayName}\r\n            onChange={(e) => setUserData({ ...userData, displayName: e.target.value })}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"email\" className={`email ${userData.email === \"\" ? null : \"focus\"}`}>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={userData.email}\r\n            onChange={(e) => setUserData({ ...userData, email: e.target.value })}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\" className={`password ${userData.password === \"\" ? null : \"focus\"}`}>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={userData.password}\r\n            onChange={(e) => setUserData({ ...userData, password: e.target.value })}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password-check\" className={`password-check ${userData.passwordCheck === \"\" ? null : \"focus\"}`}>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password-check\"\r\n            value={userData.passwordCheck}\r\n            onChange={(e) => setUserData({ ...userData, passwordCheck: e.target.value })}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"photo-url\" className=\"photo-url\">\r\n          <FileBase\r\n            type=\"file\"\r\n            id=\"photo-url\"\r\n            onDone={({ base64 }) => setUserData({ ...userData, photoURL: base64 })}\r\n            multiple={false}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"submit-btn\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\layout\\alert\\Notify.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Chat.jsx",["173","174","175","176"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport SideBarChat from \"./Tools/SideBar/SideBarChat\";\r\nimport ChatBox from \"./Tools/ChatBox/ChatBox\";\r\nimport \"./Chat.scss\";\r\n\r\nconst Chat = () => {\r\n  const [, updateState] = useState();\r\n  const [rooms, setRooms] = useState([]);\r\n  const user = useSelector((state) => state.users.user);\r\n  const socket = useSelector((state) => state.chat.socket);\r\n  useEffect(() => {\r\n    console.log(\"chat\");\r\n    socket.emit(\"init\", (rooms) => {\r\n      setRooms(rooms);\r\n    });\r\n    return () => socket.off(\"init\");\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"chat-overlay\">\r\n      <SideBarChat rooms={rooms} setRooms={setRooms} />\r\n      <ChatBox />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\ToolsBar\\ToolsBar.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\ChatBox\\ChatBox.jsx",["177"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./ChatBox.scss\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport { addMessage } from \"../../../../actions/chat.action\";\r\nimport Messages from \"./Messages/Messages\";\r\n\r\nconst ChatBox = () => {\r\n  const socket = useSelector((state) => state.chat.socket);\r\n  const messages = useSelector((state) => state.chat.messages);\r\n  const room = useSelector((state) => state.chat.room);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      dispatch(addMessage(message));\r\n    });\r\n    return () => socket.off(\"message\");\r\n  }, []);\r\n  console.log(messages);\r\n  return (\r\n    <div className=\"chat-box\">\r\n      <h1>{room} </h1>\r\n\r\n      <Messages messages={messages} />\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\SideBar\\SideBarChat.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\ChatBox\\Footer\\Footer.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\SideBar\\Room\\Room.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\reducers\\chat.reducer.js",["178"],"import { SET_ROOM, SET_SOCKET, ADD_MESSAGE, GET_MESSAGES } from \"../constants/actionTypes\";\r\nexport default (chat = { room: \"\", socket: null, messages: [] }, action) => {\r\n  switch (action.type) {\r\n    case SET_SOCKET:\r\n      return { ...chat, socket: action.payload };\r\n    case SET_ROOM:\r\n      return { ...chat, room: action.payload };\r\n    case ADD_MESSAGE:\r\n      return { ...chat, messages: [...chat.messages, action.payload] };\r\n    case GET_MESSAGES:\r\n      return { ...chat, messages: action.payload };\r\n    default:\r\n      return chat;\r\n  }\r\n};\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\actions\\chat.action.js",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\ChatBox\\Messages\\Messages.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\chat\\Tools\\ChatBox\\Messages\\Message.jsx",["179"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ReactEmoji from \"react-emoji\";\r\n\r\nconst Message = ({ message }) => {\r\n  const user = useSelector((state) => state.users.user);\r\n  const [showMess, setShowMess] = useState(true);\r\n  useEffect(() => {\r\n    let timer;\r\n    if (message.uid === \"admin\") {\r\n      timer = setTimeout(() => {\r\n        setShowMess(false);\r\n      }, 2000);\r\n    }\r\n    return () => clearTimeout(timer);\r\n  }, [message]);\r\n  var stringToColour = function (str) {\r\n    var hash = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    var colour = \"#\";\r\n    for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xff;\r\n      colour += (\"00\" + value.toString(16)).substr(-2);\r\n    }\r\n    return colour;\r\n  };\r\n  return (\r\n    <>\r\n      {showMess && (\r\n        <article className={`message-center ${user._id !== message.uid ? \"normal\" : \"myself\"}`}>\r\n          <div>\r\n            <span\r\n              style={message.uid !== \"admin\" ? { color: `${stringToColour(message.uid)}` } : { color: \"red\" }}\r\n              className={`name ${message.uid === \"admin\" ? \"admin\" : \"user\"}`}\r\n            >\r\n              {message.displayName} :{\" \"}\r\n            </span>\r\n            <span className=\"message\">{ReactEmoji.emojify(message.message)}</span>\r\n          </div>\r\n        </article>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n",["180","181"],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\utils\\elements\\Button\\Button.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\layout\\SinglePost\\SinglePost.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\pages\\PostPage.jsx",["182"],"import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getComments, getSinglePost } from \"../../actions/post.action\";\r\nimport Post from \"../Posts/Post/Post\";\r\nimport Comments from \"../layout/Comments/Comments\";\r\n\r\nconst PostPage = () => {\r\n  const comments = useSelector((state) => state.posts.comments);\r\n  const posts = useSelector((state) => state.posts.posts);\r\n  const post = useSelector((state) => state.posts.post);\r\n\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    dispatch(getComments(id));\r\n    dispatch(getSinglePost(id));\r\n  }, []);\r\n  if (!Object.keys(post).length) return <></>;\r\n  return (\r\n    <div>\r\n      {posts.length === 0 ? (\r\n        <Post {...post} single={true} />\r\n      ) : (\r\n        <Post {...posts.find((post) => post._id === id)} single={true} />\r\n      )}\r\n      <Comments comments={comments} id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\components\\layout\\Comments\\Comments.jsx",[],"E:\\MyApp\\Github\\NodeProject\\memories\\client\\src\\utils\\functions\\moment.js",["183"],"export default (createdAt) => {\r\n  const time = new Date().getTime() - new Date(createdAt).getTime();\r\n  if (time / (1000 * 60 * 60 * 24 * 30) >= 1) {\r\n    return `${Math.floor(time / (1000 * 60 * 60 * 24 * 30))} months ago`;\r\n  } else if (time / (1000 * 60 * 60 * 24) >= 1) {\r\n    return `${Math.floor(time / (1000 * 60 * 60 * 24))} days ago`;\r\n  } else if (time / (1000 * 60 * 60) >= 1) {\r\n    return `${Math.floor(time / (1000 * 60 * 60))} hours ago`;\r\n  } else if (time / (1000 * 60) >= 1) {\r\n    return `${Math.floor(time / (1000 * 60))} minutes ago`;\r\n  } else {\r\n    return \"Just now\";\r\n  }\r\n};\r\n",{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":2,"column":23,"nodeType":"190","messageId":"191","endLine":2,"endColumn":34},{"ruleId":"192","severity":1,"message":"193","line":28,"column":6,"nodeType":"194","endLine":28,"endColumn":8,"suggestions":"195"},{"ruleId":"188","severity":1,"message":"196","line":12,"column":10,"nodeType":"190","messageId":"191","endLine":12,"endColumn":11},{"ruleId":"192","severity":1,"message":"197","line":24,"column":6,"nodeType":"194","endLine":24,"endColumn":17,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":3,"column":1,"nodeType":"201","endLine":16,"endColumn":3},{"ruleId":"199","severity":1,"message":"200","line":14,"column":1,"nodeType":"201","endLine":60,"endColumn":3},{"ruleId":"188","severity":1,"message":"202","line":13,"column":10,"nodeType":"190","messageId":"191","endLine":13,"endColumn":17},{"ruleId":"188","severity":1,"message":"203","line":1,"column":27,"nodeType":"190","messageId":"191","endLine":1,"endColumn":38},{"ruleId":"188","severity":1,"message":"204","line":1,"column":40,"nodeType":"190","messageId":"191","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"196","line":9,"column":10,"nodeType":"190","messageId":"191","endLine":9,"endColumn":11},{"ruleId":"188","severity":1,"message":"205","line":2,"column":23,"nodeType":"190","messageId":"191","endLine":2,"endColumn":34},{"ruleId":"188","severity":1,"message":"206","line":8,"column":12,"nodeType":"190","messageId":"191","endLine":8,"endColumn":23},{"ruleId":"188","severity":1,"message":"207","line":10,"column":9,"nodeType":"190","messageId":"191","endLine":10,"endColumn":13},{"ruleId":"192","severity":1,"message":"208","line":18,"column":6,"nodeType":"194","endLine":18,"endColumn":8,"suggestions":"209"},{"ruleId":"192","severity":1,"message":"210","line":18,"column":6,"nodeType":"194","endLine":18,"endColumn":8,"suggestions":"211"},{"ruleId":"199","severity":1,"message":"200","line":2,"column":1,"nodeType":"201","endLine":15,"endColumn":3},{"ruleId":"212","severity":1,"message":"213","line":23,"column":14,"nodeType":"190","messageId":"214","endLine":23,"endColumn":15},{"ruleId":"184","replacedBy":"215"},{"ruleId":"186","replacedBy":"216"},{"ruleId":"192","severity":1,"message":"217","line":19,"column":6,"nodeType":"194","endLine":19,"endColumn":8,"suggestions":"218"},{"ruleId":"199","severity":1,"message":"200","line":1,"column":1,"nodeType":"201","endLine":14,"endColumn":3},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cookies.user' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["221"],"'_' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.",["222"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'cookies' is assigned a value but never used.","'DELETE_USER' is defined but never used.","'GET_USER' is defined but never used.","'useDispatch' is defined but never used.","'updateState' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["223"],"React Hook useEffect has missing dependencies: 'dispatch' and 'socket'. Either include them or remove the dependency array.",["224"],"no-redeclare","'i' is already defined.","redeclared",["219"],["220"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [cookies.user, dispatch]",{"range":"236","text":"237"},"Update the dependencies array to be: [currentId, posts]",{"range":"238","text":"239"},"Update the dependencies array to be: [socket]",{"range":"240","text":"241"},"Update the dependencies array to be: [dispatch, socket]",{"range":"242","text":"243"},"Update the dependencies array to be: [dispatch, id]",{"range":"244","text":"245"},[1105,1107],"[cookies.user, dispatch]",[998,1009],"[currentId, posts]",[623,625],"[socket]",[673,675],"[dispatch, socket]",[687,689],"[dispatch, id]"]